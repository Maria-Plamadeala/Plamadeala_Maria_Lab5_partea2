<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Plamadeala_Maria_Lab5"
        xmlns:AutoLotModel="clr-namespace:AutoLotModel;assembly=AutoLotModel" x:Class="Plamadeala_Maria_Lab5.MainWindow"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="945" Loaded="Window_Loaded">
    <Window.Resources>
        <CollectionViewSource x:Key="customerViewSource" d:DesignSource="{d:DesignInstance {x:Type AutoLotModel:Customer}, CreateList=True}"/>
        <CollectionViewSource x:Key="inventoryViewSource" d:DesignSource="{d:DesignInstance {x:Type AutoLotModel:Inventory}, CreateList=True}"/>
        <CollectionViewSource x:Key="customerOrdersViewSource" Source="{Binding Orders, Source={StaticResource customerViewSource}}"/>
        <ControlTemplate x:Key="validationTemplate">
            <DockPanel>
                <TextBlock Foreground="Red" FontSize="20">!</TextBlock>
                <AdornedElementPlaceholder/>
            </DockPanel>
        </ControlTemplate>
        <Style x:Key="textBoxInError" TargetType="{x:Type TextBox}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                    Value=" {Binding RelativeSource={x:Static RelativeSource.Self},Path=(Validation.Errors)/ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid Margin="221,0,133,0">
        <GroupBox x:Name="gbOperations" Header="GroupBox" HorizontalAlignment="Left" Height="122" Margin="-181,60,0,0" VerticalAlignment="Top" Width="143" Button.Click ="gbOperations_Click">
            <StackPanel  x:Name="spOperations" HorizontalAlignment="Left" Height="97" Margin="10,0,-12,0" VerticalAlignment="Top" Width="133">
                <Button x:Name="btnNew" Content="New" HorizontalAlignment="Left" Height="21" VerticalAlignment="Top" Width="121" Grid.ColumnSpan="2" Click="btnAdd_Click" />
                <Button x:Name="btnEdit" Content="Edit" HorizontalAlignment="Left" Height="22"  VerticalAlignment="Top" Width="121" Grid.ColumnSpan="2" Click="btnEdit_Click" />
                <Button x:Name="btnDelete" Content="Delete" HorizontalAlignment="Left" Height="21"  VerticalAlignment="Top" Width="121" Grid.ColumnSpan="2" Click="btnDelete_Click"/>

            </StackPanel>

        </GroupBox>

        <GroupBox x:Name="gbActions" Header="GroupBox" HorizontalAlignment="Left" Height="135" Margin="-181,227,0,0" VerticalAlignment="Top" Width="143">
            <StackPanel x:Name="spActions"  HorizontalAlignment="Left" Height="100" VerticalAlignment="Top" Width="133" Margin="0,0,-2,0">
                <Button x:Name="btnSave" Content="Save" HorizontalAlignment="Left" Height="21" VerticalAlignment="Top" Width="121" Grid.ColumnSpan="2" Click="btnSave_Click">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="IsEnabled" Value="false" />
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding ElementName=firstNameTextBox, Path=(Validation.HasError)}" Value="false" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="true" />
                                </MultiDataTrigger>
                                
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding ElementName=lastNameTextBox, Path=(Validation.HasError)}" Value="false" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="true" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button x:Name="btnCancel" Content="Cancel" HorizontalAlignment="Left" Height="21" VerticalAlignment="Top" Width="121" Grid.ColumnSpan="2" Click="btnCancel_Click"/>
            </StackPanel>


        </GroupBox>
        <TabControl x:Name="tbCtrlAutoLot" Height="362" Margin="-14,47,-41,0" VerticalAlignment="Top">
            <TabItem Header="Customers" Margin="0,-2,-2,0">
                <Grid Background="#FFE5E5E5" DataContext="{StaticResource customerViewSource}" Margin="0,-2,-2,-2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="75*"/>
                        <ColumnDefinition Width="14*"/>
                        <ColumnDefinition Width="18*"/>
                        <ColumnDefinition Width="23*"/>
                        <ColumnDefinition Width="31*"/>
                        <ColumnDefinition Width="473*"/>
                    </Grid.ColumnDefinitions>
                    <DataGrid x:Name="customerDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="43,30,80,182" RowDetailsVisibilityMode="VisibleWhenSelected" Grid.Column="5">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="custIdColumn" Binding="{Binding CustId}" Header="Cust Id" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="firstNameColumn" Binding="{Binding FirstName}" Header="First Name" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="lastNameColumn" Binding="{Binding LastName}" Header="Last Name" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Grid x:Name="grid1" HorizontalAlignment="Left" Margin="109,222,0,0" VerticalAlignment="Top" Height="106" Width="219" Grid.Column="5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label Content="Cust Id:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="0" VerticalAlignment="Center"/>
                        <TextBox x:Name="custIdTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="0" Text="{Binding CustId, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                        <Label Content="First Name:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="1" VerticalAlignment="Center"/>
                        <TextBox x:Name="firstNameTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="1" Text="{Binding FirstName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" 
                        Validation.ErrorTemplate="{StaticResource validationTemplate}" Style="{StaticResource textBoxInError}" />
                        <Label Content="Last Name:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="2" VerticalAlignment="Center"/>
                        <TextBox x:Name="lastNameTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="2" Text="{Binding LastName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"
                        Validation.ErrorTemplate="{StaticResource validationTemplate}" Style="{StaticResource textBoxInError}"/>
                    </Grid>


                    <Button x:Name="btnPrevious" Content="Previous" HorizontalAlignment="Left" Height="21" Margin="43,161,0,0" VerticalAlignment="Top" Width="121" Grid.Column="5" Click="btnPrevious_Click"/>
                    <Button x:Name="btnNext" Content="Next" HorizontalAlignment="Left" Height="21" Margin="272,161,0,0" VerticalAlignment="Top" Width="121" RenderTransformOrigin="0.517,-0.5" Grid.Column="5" Click="btnNext_Click"/>


                </Grid>
            </TabItem>
            <TabItem Header="Inventory">
                <Grid Background="#FFE5E5E5" DataContext="{StaticResource inventoryViewSource}" Margin="-56,-2,-2,-5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="103*"/>
                        <ColumnDefinition Width="114*"/>
                        <ColumnDefinition Width="12*"/>
                        <ColumnDefinition Width="459*"/>
                    </Grid.ColumnDefinitions>
                    <DataGrid x:Name="inventoryDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="5,22,85,192" RowDetailsVisibilityMode="VisibleWhenSelected" Grid.Column="3">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="carIdColumn" Binding="{Binding CarId}" Header="Car Id" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="colorColumn" Binding="{Binding Color}" Header="Color" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="makeColumn" Binding="{Binding Make}" Header="Make" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Grid x:Name="grid2" HorizontalAlignment="Left" Margin="55,213,0,0" VerticalAlignment="Top" Height="95" Width="244" Grid.Column="3">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label Content="Car Id:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="0" VerticalAlignment="Center"/>
                        <TextBox x:Name="carIdTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="0" Text="{Binding CarId, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                        <Label Content="Color:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="1" VerticalAlignment="Center"/>
                        <TextBox x:Name="colorTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="1" Text="{Binding Color, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                        <Label Content="Make:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="2" VerticalAlignment="Center"/>
                        <TextBox x:Name="makeTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="2" Text="{Binding Make, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                    </Grid>

                    <Button x:Name="btnPrevious1" Content="Previous" HorizontalAlignment="Left" Height="21" Margin="5,160,0,0" VerticalAlignment="Top" Width="121" Click="btnPrevious1_Click" Grid.Column="3"/>
                    <Button x:Name="btnNext1" Content="Next" HorizontalAlignment="Left" Height="21" Margin="253,160,0,0" VerticalAlignment="Top" Width="121" RenderTransformOrigin="0.517,-0.5" Click="btnNext1_Click" Grid.Column="3"/>
                </Grid>
            </TabItem>
            <TabItem Header="Orders">
                <Grid Background="#FFE5E5E5" DataContext="{StaticResource customerOrdersViewSource}" Margin="0,0,-2,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="13*"/>
                        <ColumnDefinition Width="145*"/>
                    </Grid.ColumnDefinitions>
                    <ComboBox x:Name="cmbCustomers" HorizontalAlignment="Left" Margin="60,69,0,0" VerticalAlignment="Top" Width="156" Height="25" 
                    SelectedValue="{Binding ElementName=ordersDataGrid,Path=SelectedItem.CustId,Mode=OneWay}" Grid.Column="1">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock>
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} {1}">
                                            <Binding Path="FirstName"/>
                                            <Binding Path="LastName"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <ComboBox x:Name="cmbInventory" HorizontalAlignment="Left" Margin="376,69,0,0" VerticalAlignment="Top" Width="154" Height="25" 
                    SelectedValue="{Binding ElementName=ordersDataGrid,Path=SelectedItem.CarId,Mode=OneWay}" Grid.Column="1">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock>
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} {1}">
                                            <Binding Path="Make"/>
                                            <Binding Path="Color"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <Label x:Name="lblCustomers" Content="Customers" HorizontalAlignment="Left" Margin="60,43,0,0" VerticalAlignment="Top" Width="156" Height="26" Grid.Column="1"/>
                    <Label x:Name="lblInventory"  Content="Inventory" HorizontalAlignment="Left" Margin="376,43,0,0" VerticalAlignment="Top" Width="154" Grid.Column="1"/>
                    <DataGrid x:Name="ordersDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="128,146,128,64" RowDetailsVisibilityMode="VisibleWhenSelected" Grid.Column="1">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="FirstNameColumn" Binding="{Binding FirstName}"
                             Header="First Name" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="LastNameColumn" Binding="{Binding LastName}"
                             Header="Last Name" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="MakeColumn" Binding="{Binding Make}"
                             Header="Make" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="ColorColumn" Binding="{Binding Color}"
                             Header="Color" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>

            </TabItem>
        </TabControl>

    </Grid>
</Window>
